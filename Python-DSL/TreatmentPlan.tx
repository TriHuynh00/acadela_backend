Start:
    (('workspace' workspace=Workspace) workspaceProp=Define)#
;

// Workspace Definition Level

Workspace:
    BasicIdentity
;

BasicIdentity:
    (('staticId' Eq staticId=Text) ('id' Eq id=Text))#
;

Define:
    'define' case=Case
;

// Case Definition Level

Case:
    (
        ('case' casename=TextNoQuote)
        userGroupList += Group
        userList += User
        (
            attrList = AttrList
            caseDef = CaseDef
        )#
    )#
;

AttrList:
    'attributelist'
    (entity += Entity | attr += Attribute)*
;

Group:
    'group' BasicIdentity
;

User:
    'user' BasicIdentity
;

Entity:
    "entity" name=TextNoQuote
    (
        attr += Description
        attr += Multiplicity
        type ?= Type?
    )#

;

Type:
    ('type' Eq type=Text)
;

Attribute:
    "attribute" name=TextNoQuote
;

CaseDef:
    'casedefinition' caseDefName=TextNoQuote
;

MultiAttrModel:
    (attr+=Multiplicity
    attr+=CasePrefix
    attr+=UiReference)#
;

Multiplicity:
    ('multiplicity' Eq multiplicity=Text)
;

Description:
    ('description' Eq description=Text)
;

CasePrefix:
    'prefix' Eq pattern=Text
;

UiReference:
    'uiReference' Eq uiRef=Function
;


ValidFunctionName:
    'number' | 'colors'
;

Function:
    ValidFunctionName
    '('
        (Expression | ParamPattern)
    ')'
;

ParamPattern:
    Text (',' Text)*
;

Expression:
    INT (Comparator ColorName Comparator INT)+
;

ColorName:
    'red'
    | 'blue'
    | 'green'
;

Comparator:
    '='
    | '<>'
    | '<='
    |'>='
    | '<'
    | '>'
;

Text:
    STRING
;


TextNoQuote:
    /([a-z-_A-Z])*/
;

Eq:
    '='
;
